class Solution {
    public int[] topKFrequent(int[] nums, int k) {
        
        Map<Integer,Integer> map = new HashMap<>();
        for(Integer value: nums){
            if(map.containsKey(value)){
                map.put(value, map.get(value)+1);
            }else
                map.put(value,1);
        }

        PriorityQueue<Integer> minHeap = new PriorityQueue<>(new Comparator<Integer>(){
            public int compare(Integer a, Integer b){
                return map.get(a)-map.get(b);
            }
        });
        
        for(int n:map.keySet()){
            
            minHeap.add(n);
            if(minHeap.size()>k)
                minHeap.poll();
        }
        
        int[] top = new int[k];
        for(int i=k-1; i>=0; i--){
            top[i] = minHeap.poll();
        }
        return top;
    }
}
